#adicionar arquivo especifico:
git add <nomearquivo> 

#adicionar todos os arquivos dentro desta pasta:
git add *

#confirma as mudanças e adiciona comentarios delas:
git commit -m "comentários das alterações" 

#visualiza o status do repositório, se ainda há arquivos para comitar:
git status --- 

#Atualizar repositorio local (puxar do github para a sua máquina):
git pull 

#cópia de um repositório existente para o seu ambiente local:
git clone

#envia os nossos arquivos para um repositório remoto(github):
git push 

# Obtenha todos os branches deste novo remote,
# como o upstream/master por exemplo:

git fetch upstream

# Certifique-se de que você está no branch master:

git checkout master

# Reescreva o seu branch master, de forma que os seus commits
# que não estão no projeto original apareçam, e que os seus
# commits fiquem no topo da lista:

git rebase upstream/master

# Se você não quiser reescrever o histórico do seu branch master
# (talvez porque alguém já o tenha clonado) então você deve
# substituir o último comando por um

git merge upstream/master

# No entanto, para fazer com que futuros pull requests fiquem o mais
# limpos possível, é uma boa ideia fazer o rebase.



